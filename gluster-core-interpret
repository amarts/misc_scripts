#!/bin/bash

# This can be used as a part of GlusterFS project to interpret the core files 
# generated by glusterfs binaries.
# 

_init()
{
    core_path="$1"
    output_path="gluster-details-$(date +%Y.%m.%d.%H.%M.%S)";
    mkdir -p $output_path;
}

interpret_core ()
{
    gdb glusterfs -c ${core_path} --ex 'thread apply all bt full' --batch \
        1> ${output_path}/core-backtrace.txt 2> ${output_path}/core-errors.txt
}

collect_more_info ()
{
    glusterfs --version >> ${output_path}/version
    cp -r /var/log/glusterfs/* ${output_path}/
    cp -r /etc/glusterd/* ${output_path}/
    gluster peer status >> ${output_path}/peer.status
    gluster volume info all >> ${output_path}/volume.info
}

make_tarfile ()
{
    tar czf ${output_path}.tar.gz ${output_path}/
    echo "details collected are kept in \"${output_path}.tar.gz\", you can use this to get more support"
}

main ()
{
    if [ $# -ne 1 ]; then
        echo "$0 needs glusterfs core to interpret";
	exit 1
    fi

    _init "$@"

    interpret_core
    collect_more_info
    make_tarfile
}

main "$@"
